<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=Edge, Chrome=1">
<meta http-equiv="Pragma" content="no-cache">
<meta http-equiv="Cache-Control" content="no-cache">
<meta http-equiv="Expires" content="Thu, 01 Dec 1994 16:00:00 GMT">
<script>var currTime = new Date().getTime();</script>
<title><%= title %></title>
<link rel="stylesheet" href="/css/style.css"/>

<!-- Bootstrap -->
<script src="/js/jquery-1.11.1.min.js"></script>
<script src="/js/bootstrap.js"></script>

<link href="/css/toilet.css" rel="stylesheet" type="text/css"/>
<link href="/css/bootstrap.css" rel="stylesheet" type="text/css"/>

</head>
<body  class="pages">
<h3 align="center"><%= title %></h3>
<div id="conn-count" class="unknown">オンライン接続数</div>
<script>
  var VERSION = <%- JSON.stringify(version) %>;
  var MAX_MESSAGES = <%- max_messages %>;
  var prmsgs = [];

  // Time 時刻
  function toTimeString(x) {
    x = x instanceof Date ? x : this instanceof Date ? this : new Date;
    return pad02(x.getHours()) + ':' + pad02(x.getMinutes()) + ':' +
      pad02(x.getSeconds()) + '.' + pad03(x.getMilliseconds()); }
  function pad02(n) { return ('0'+ n).slice(-2); }
  function pad03(n) { return ('00'+ n).slice(-3); }
  function pad(n, m) {
    return m > 0 ? ('            '+ n).slice(-m) : (n + '            ').slice(0, -m);
  }
  function ms(ms) {
    return pad((ms / 1000).toFixed(3), 12) + ' sec '; }
  function delta() {
    var prev = currTime; currTime = Date.now();
    return toTimeString() + ms(currTime - prev); }
  var $connCount = document.getElementById('conn-count');

  var $consoleOutput;
  function pr(msg) {
    msg = delta() + msg;
    prmsgs.push(msg);
    if (!$consoleOutput) return;
    var list = $consoleOutput.childNodes;
    while (list.length >= MAX_MESSAGES) $consoleOutput.removeChild(list[0]);
    while (msg = prmsgs.shift()) {
      var div = document.createElement('div');
      div.appendChild(document.createTextNode(msg));
      $consoleOutput.appendChild(div);
    } // while prmsgs
  } // pr
  pr('initialized');
</script>
<script src="/socket.io/socket.io.js"></script>
<script>
  var group;
  var rooms = {};
  var $rooms = {};
  var socket = io.connect(document.location.href);
  // 最初の電文を受信
  socket.on('first', function (data) {
    dispCount(data);
    pr('first:' + JSON.stringify(data));
    socket.emit('get group', { group_id: 'rs' });
  });
  // グループを受信
  socket.on('response group', function (data) {
    pr('response group:' + JSON.stringify(data));
    dispCount(data);
    group = data.group;
    for (var i in group.sites) {
      var site = group.sites[i];
      for (var j in site.locations) {
        var loc = site.locations[j];
        for (var k in loc.rooms) {
          var room = loc.rooms[k];
          pr([group.name, site.name, loc.name, room.name].join(' - '));
          rooms[room.room_id] = room;
          //$rooms[room.room_id] = $('#' + room.room_id);
          $rooms[room.room_id] = document.getElementById(room.room_id);
        }
      }
    }
  });
  // 放送を受信
  socket.on('broadcast', function (data) {
    pr('broadcast:' + JSON.stringify(data));
    dispCount(data);
  });
  // 部屋が更新された
  socket.on('room changed', function (data) {
    pr('room changed:' + JSON.stringify(data));
    var $room = $rooms[data.room_id];
    if (!$room) return; // 本当は対応が必要
    while ($room.lastChild) $room.removeChild($room.lastChild);
    $room.className = 'toilet-' + (data.status ? 'occupied': 'empty');
    var div = document.createElement('div');
    div.appendChild(document.createTextNode(data.status ? 'used!': 'empty!'));
    $room.appendChild(div); // dom
    var div = document.createElement('div');
    div.className = "toilet-time";
    div.appendChild(document.createTextNode(data.updated_at));
    $room.appendChild(div); // dom
    //$rooms[data.room_id].append(div); // jquery
  });
  // ユーザー切断を受信
  socket.on('user disconnected', function (data) {
    pr('user disconnected:' + JSON.stringify(data));
    dispCount(data);
  });
  // 切断時
  socket.on('disconnect', function () {
    pr('disconnect');
    dispCount({conn_count: 0});
  });
  // 表示
  function dispCount(data) {
    // pr('dispCount:' + JSON.stringify(data));
    if (data && data.hasOwnProperty('conn_count')) {
      var connCount = data.conn_count;
      $connCount.innerHTML = 'オンライン接続数: ' + connCount +
        (connCount === 0 ? ' - 切断されています ' :
         connCount === 1 ? ' - あなたひとりだけです ' :
                           ' - あなた以外に何人かいます ' ) + VERSION;
      // $connCount.style.backgroundColor = connCount ? 'green' : 'red';
      $connCount.className = connCount ? 'online' : 'offline';
    }
    if (data && data.hasOwnProperty('version')) {
      if (data.version !== VERSION) {
        setTimeout(function () { location.reload(); }, 500);
        setTimeout(function () { socket.close(); }, 10);
      }
    } // version
  } // dispCount
</script>
<div class="container">
  <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
    <select name="type" class="col-xs-8 c_item form-control">
<% for (var i in group.sites) { %>
      <option id="<%- group.sites[i].site_id %>"><%= group.sites[i].name %></option>
<% } %>
    </select>
  </div>

<% for (var i in group.sites) {
     var site = group.sites[i];
     var siteSelected = siteSelected || site; %>
  <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12"
       id="<%- site.site_id %>"
       style="display:<%- siteSelected === site ? 'inline-block': 'none' %>">
<%   for (var j in site.locations) {
       var loc = site.locations[j]; %>
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
      <hr class="toilet-floor-separator" />
    </div>
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
      <div class="col-xs-3 col-sm-3 col-md-3col-lg-3 toilet-position"
         id="<%- loc.location_id %>"><%= loc.name %></div>
<%     for (var k in loc.rooms) {
         var room = loc.rooms[k]; %>
      <div class="col-xs-3 col-sm-3 col-md-3col-lg-3">
        <div class="toilet-<%- room.status ? 'occupied' : 'empty' %>"
             id="<%- room.room_id %>">
          <div><%= room.status ? 'used!' : 'empty!' %></div>
          <div class="toilet-time"><%= room.updated_at %></div>
        </div>
      </div>
<%     } // rooms %>
    </div>
<%   } // locations %>
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
      <hr class="toilet-floor-separator" />
    </div>
  </div>
<% } // sites %>

<!--
	<div class=" col-xs-3 col-sm-3 col-md-3col-lg-3 toilet-light-off">
		light-off</div>
	<div class=" col-xs-3 col-sm-3 col-md-3col-lg-3 toilet-light-on">
		light-on</div>
-->
</div>

<!--
<pre id="console-output"></pre>
<script>
  $consoleOutput = document.getElementById('console-output');
</script>
-->

</body>
</html>
